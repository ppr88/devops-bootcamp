#!/usr/bin/env groovy

library identifier: 'jenkins-shared-library@master', retriever: modernSCM(
    [$class: 'GitSCMSource',
    remote: 'https://gitlab.com/twn-devops-bootcamp/latest/09-aws/jenkins-shared-library.git',
    credentialsID: 'gitlab-credentials'
    ]
)

pipeline {
    agent any
    tools {
        maven 'maven-3.9'
    }
    stages {
        stage('increment version') {
            steps {
                echo 'incrementing app version...'
                dir('08-aws/') {
                    script {
                        def matcher = readFile('pom.xml') =~ '<version>(.+)</version>'
                        def version = matcher[0][1]
                        env.IMAGE_NAME = "$version-$BUILD_NUMBER"
                    }
                }
            }
        }
        stage('build app') {
            steps {
                echo 'building application jar...'
                dir('08-aws/') {
                    buildJar()
                }
            }
        }
        stage('build image') {
            steps {
                dir('08-aws/') {
                    script {
                        echo 'building the docker image...'
                        buildImage(env.IMAGE_NAME)
                        dockerLogin()
                        dockerPush(env.IMAGE_NAME)
                    }
                }
            }
        } 
        stage("deploy") {
            steps {
                script {
                    echo 'deploying docker image to EC2...'
                    
                    def remoteServer = "ec2-user@35.180.196.85"
                    def setEnvVarCmd = "export APP_IMAGE=${IMAGE_NAME}"
                    def dockerComposeCmd = "docker-compose -f docker-compose.yaml up --detach"
                    
                    sshagent(['ec2-key']) {
                        sh "scp 08-aws/docker-compose.yaml ${remoteServer}:/home/ec2-user"
                        sh "ssh -o StrictHostKeyChecking=no ${remoteServer} '${setEnvVarCmd} && ${dockerComposeCmd}'"
                    }
                }
            }               
        }
    }
}
